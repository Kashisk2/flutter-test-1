on: push
name: Test, Build and Release apk
jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1 # Updated to the latest version of actions/checkout

      - name: Set up Java
        uses: actions/setup-java@v1 # Updated to the latest version of actions/setup-java
        with:
          java-version: "12.x"

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.16.9"

      - name: Install dependencies
        run: flutter pub get

            - name: Bump version and create tag
        run: |
          # Extract current version from pubspec.yaml
          current_version=$(grep version: pubspec.yaml | awk '{print $2}' | sed 's/\"//g')

          # Increment the version number (use your versioning strategy)
          new_version=$(echo $current_version | awk -F. '{$NF+=1; OFS="."} NF==1{print $1+1} NF>1{print $0}')

          # Update the version in pubspec.yaml
          sed -i "s/version: $current_version/version: $new_version/" pubspec.yaml

          # Commit the updated version
          git config user.name "Kashisk2"
          git config user.email "kashiramshekhda2010@gmail.com"
          git add pubspec.yaml
          git commit -m "Bump version to $new_version"

          # Replace spaces with dots in the version number
          tag_version=$(echo "$new_version" | tr -d ' ')

          # Create and push the tag
          git tag -a "$tag_version" -m "Release $tag_version"
          git push origin "$tag_version"

          echo "New version: $new_version"

      - name: Run tests
        run: flutter test

      - name: Build APK
        run: flutter build apk --release

      - name: Push APK to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
          name: "app-release.apk"
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
